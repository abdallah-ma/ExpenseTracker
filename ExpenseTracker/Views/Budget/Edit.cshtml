
@using ExpenseTracker.BLL.Interfaces
@model BudgetViewModel
@inject IUnitOfWork _UnitOfWork
@{
    ViewData["Title"] = "Edit";
}

@section Jquery {
<script src="~/lib/jquery/dist/jquery.js"></script>
}



@section JqueryMultipleSelect {
<script src="~/js/jquery.multi-select.js"></script>
<link href="~/css/multi-select.css" rel="stylesheet" />
<link href="~/css/multi-select.dist.css" rel="stylesheet" />

}

<form asp-controller="Budget" asp-action="Edit">



    <div class="form-group">

        <label class="col-form-label" for="Name">Name</label>
        <input asp-for="Name" class="form-control" />
        <span asp-validation-for="Name" class="text-danger"> </span>
    </div>

    <div class="form-group">

        <label for="Accounts" form="form-control">Accounts</label>
        <select asp-for="Accounts" name="Accounts" id="Accounts" class="form-control" multiple="multiple">


            @{
                SortedSet<int> Set = new SortedSet<int>();

                    foreach(var Id in Model.Accounts)
                {
                    var Account = await _UnitOfWork.AccountRepository.GetAsync(Id);
                    if(Account != null)
                    {
                        Set.Add(Account.Id);
                        <option value=@Account.Id selected>@Account.Name</option>
                    }
                }

                
                var Accounts = await _UnitOfWork.AccountRepository.GetAllAsync();
                foreach (var Account in Accounts)
                {

                    if(!Set.Contains(Account.Id)){
                    <option value=@Account.Id> @Account.Name </option>
                    }
                }

            }


        </select>


    </div>

    <div class="form-group">

        <label class="col-form-label" for="Limit">Limit</label>
        <input asp-for="Limit" class="form-control" />
        <span asp-validation-for="Limit" class="text-danger"> </span>

    </div>

    <div class="form-group">

        <label class="col-form-label" for="Period">Period</label>
        <select id="Period" asp-for="Period" class="form-control">
            <option value="Week">Week</option>
            <option value="Month">Month</option>
            <option value="Month">Year</option>
            <option value="OneTime">One Time</option>
        </select>

    </div>



    <div class="form-group" id="other">

        <label class="col-form-label" for="StartDate">Start date</label>
        <input asp-for="StartDate" class="form-control" type="datetime-local" value="1999-01-01T19:30" />
        <span asp-validation-for="StartDate" class="text-danger"> </span>

        <label class="col-form-label" for="End date">End date</label>
        <input asp-for="EndDate" class="form-control" type="datetime-local" value="1999-01-01T19:30" />
        <span asp-validation-for="EndDate" class="text-danger"> </span>


    </div>


    <div class="form-group">
        <label class="col-form-label" for="Type">Type</label>
        <select asp-for="Category" class="form-control">
            <option>Food&Drink</option>
            <option>Clothing</option>
        </select>

    </div>

    <br />

    <input type="submit" value="Create" class="btn btn-primary"></input> |
    <a asp-Controller="Account" asp-action="Index" class="btn btn-dark">Back</a>
</form>






@section PeriodScript {
    <script>
        document.querySelector("#Period").addEventListener("change", function(e) {
            const other = document.querySelector("#other");



            if (e.target.value === "OneTime")
            {

                other.style.display = "block";
            }
            else
            {
                other.style.display = "none";
            }

        });
    </script>
}



@section MultipleSelect {

    <script type="text/javascript">




           $(document).ready(function() {
          $('#Accounts').multiSelect();
        });


    </script>

}

